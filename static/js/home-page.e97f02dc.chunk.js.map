{"version":3,"sources":["Pages/HomePage.js","Services/MoviesApi.js","Helpers/moviesMapper.js","Components/MovieList/MovieList.js","Components/MovieList/MovieList.module.css"],"names":["HomePage","state","popularMovies","moviesApi","then","data","setState","moviesMapper","results","catch","error","console","log","this","movies","Component","BASE_URL","KEY","getPopularMovies","axios","get","getMovieWithId","id","response","getMovieCast","getMovieReviews","getMovieByQuery","query","map","title","name","withRouter","location","className","styles","MoviesList","MoviesListItems","key","MoviesListItemsLink","to","pathname","from","module","exports"],"mappings":"qQAOqBA,E,4MACnBC,MAAQ,CACNC,cAAe,I,kEAGI,IAAD,OAClBC,MAEGC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,EAAKC,SAAS,CAAEJ,cAAeK,YAAaF,EAAKG,cAElDC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,+BAIR,IACAR,EAAkBW,KAAKZ,MAAvBC,cACR,OACE,oCACE,8CACA,kBAAC,IAAD,CAAYY,OAAQZ,S,GArBUa,c,gCCPtC,+LAEMC,EAAW,gCACXC,EAAM,mCAECC,EAAmB,kBAC9BC,IAAMC,IAAN,UAAaJ,EAAb,oCAAiDC,KAEtCI,EAAiB,SAAAC,GAAE,OAC9BH,IACGC,IADH,UACUJ,EADV,iBAC2BM,EAD3B,oBACyCL,IACtCb,MAAK,SAAAmB,GAAQ,OAAIA,EAASlB,SAElBmB,EAAe,SAAAF,GAAE,OAC5BH,IACGC,IADH,UACUJ,EADV,iBAC2BM,EAD3B,4BACiDL,IAC9Cb,MAAK,SAAAmB,GAAQ,OAAIA,EAASlB,SAElBoB,EAAkB,SAAAH,GAAE,OAC/BH,IACGC,IADH,UACUJ,EADV,iBAC2BM,EAD3B,4BACiDL,EADjD,4BAEGb,MAAK,SAAAmB,GAAQ,OAAIA,EAASlB,SAElBqB,EAAkB,SAAAC,GAAK,OAClCR,IACGC,IADH,UAEOJ,EAFP,gCAEuCC,EAFvC,4DAE8FU,IAE3FvB,MAAK,SAAAmB,GAAQ,OAAIA,EAASlB,U,gCCpBhBE,IARM,SAAAO,GACnB,OAAOA,EAAOc,KAAI,kBAA0B,CAC1CC,MADgB,EAAGA,MAEnBC,KAFgB,EAAUA,KAG1BR,GAHgB,EAAgBA,S,gCCDpC,mDAkCeS,iBA5BI,SAAC,GAA0B,IAAxBjB,EAAuB,EAAvBA,OAAQkB,EAAe,EAAfA,SAC5B,OACE,wBAAIC,UAAWC,IAAOC,YACnBrB,EAAOc,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMR,EAAhB,EAAgBA,GAAhB,OACV,wBAAIW,UAAWC,IAAOE,gBAAiBC,IAAKf,GAC1C,kBAAC,IAAD,CACEW,UAAWC,IAAOI,oBAClBC,GAAI,CAAEC,SAAS,WAAD,OAAalB,GAAMrB,MAAO,CAAEwC,KAAMT,KAE/CH,GAASC,Y,mBCdtBY,EAAOC,QAAU,CAAC,WAAa,8BAA8B,gBAAkB,mCAAmC,oBAAsB","file":"static/js/home-page.e97f02dc.chunk.js","sourcesContent":["/* eslint-disable react/no-unused-state */\n/* eslint-disable react/sort-comp */\nimport React, { Component } from 'react';\nimport * as moviesApi from '../Services/MoviesApi';\nimport moviesMapper from '../Helpers/moviesMapper';\nimport MoviesList from '../Components/MovieList/MovieList';\n\nexport default class HomePage extends Component {\n  state = {\n    popularMovies: [],\n  };\n\n  componentDidMount() {\n    moviesApi\n      .getPopularMovies()\n      .then(({ data }) => {\n        this.setState({ popularMovies: moviesMapper(data.results) });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    const { popularMovies } = this.state;\n    return (\n      <>\n        <h1>Trending today</h1>\n        <MoviesList movies={popularMovies} />\n      </>\n    );\n  }\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '6b5a450f9a03d737f06df8aa6d420041';\n\nexport const getPopularMovies = () =>\n  axios.get(`${BASE_URL}trending/all/day?api_key=${KEY}`);\n\nexport const getMovieWithId = id =>\n  axios\n    .get(`${BASE_URL}movie/${id}?api_key=${KEY}`)\n    .then(response => response.data);\n\nexport const getMovieCast = id =>\n  axios\n    .get(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`)\n    .then(response => response.data);\n\nexport const getMovieReviews = id =>\n  axios\n    .get(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1)`)\n    .then(response => response.data);\n\nexport const getMovieByQuery = query =>\n  axios\n    .get(\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`,\n    )\n    .then(response => response.data);\n","const moviesMapper = movies => {\n  return movies.map(({ title, name, id }) => ({\n    title,\n    name,\n    id,\n  }));\n};\n\nexport default moviesMapper;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MovieList.module.css';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <ul className={styles.MoviesList}>\n      {movies.map(({ title, name, id }) => (\n        <li className={styles.MoviesListItems} key={id}>\n          <Link\n            className={styles.MoviesListItemsLink}\n            to={{ pathname: `/movies/${id}`, state: { from: location } }}\n          >\n            {title || name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      name: PropTypes.string,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default withRouter(MoviesList);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviesList\":\"MovieList_MoviesList__2oORG\",\"MoviesListItems\":\"MovieList_MoviesListItems__Zi92A\",\"MoviesListItemsLink\":\"MovieList_MoviesListItemsLink__JItgj\"};"],"sourceRoot":""}